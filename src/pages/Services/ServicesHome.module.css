.infocontainer {
  width: 100%;
  background-color: var(--c1);
  display: flex;
  padding: 2rem 9.2rem 0;
  gap: 3rem;
  align-items: flex-end;
}
.image {
  flex: 0 0 45%;
  max-width: 600px;
  transform: translateX(-24px);
}
.image > img {
  width: 100%;
  height: auto;
  object-fit: contain;
  display: block;
}
.content {
  flex: 1;
  display: flex;
  flex-direction: column;
  justify-content: center;
  padding-bottom: 2rem;
}

/* Tablet */
@media (max-width: 1200px) {
  .infocontainer {
    padding: 2rem 4rem 0;
  }
}

@media (max-width: 1000px) {
  .infocontainer {
    flex-direction: column;
    padding: 2rem 6rem 0;
    gap: 2rem;
    align-items: stretch;
  }
  .image {
    flex: none;
    width: 100%;
    max-width: 100%;
    order: 1;
  }
  .content {
    order: 2;
    padding-bottom: 2rem;
  }
}

@media (max-width: 800px) {
  .infocontainer {
    padding: 2rem 3rem 0;
  }
}

@media (max-width: 600px) {
  .infocontainer {
    padding: 2rem 2rem 0;
  }
}

/* scoped CSS Module to avoid collisions; all classes prefixed with ts- */
.tsSection {
  margin-top: 5rem;
  padding: 0 9.2rem;
  background: var(--color-background);
  color: var(--color-foreground);
}
.tsContainer {
  margin-inline: auto;
}
.tsHeader {
  max-width: 56rem;
  margin-bottom: clamp(1.5rem, 3vw, 2rem);
}
.tsTitle {
  font-size: clamp(1.5rem, 2.2vw + 1rem, 2.5rem);
  line-height: 1.2;
  letter-spacing: -0.01em;
  font-weight: 700;
  margin: 0 0 0.5rem 0;
}
.tsDescription {
  margin: 0;
  color: var(--color-muted-foreground);
  font-size: clamp(0.95rem, 0.4vw + 0.8rem, 1.1rem);
  line-height: 1.6;
}
/* Grid */
.tsGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(260px, 1fr));
  gap: clamp(1rem, 2.5vw, 1.75rem);
}
/* Card */
.tsCard {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
  text-decoration: none;
  border-radius: 1rem;
  transition: transform 160ms ease, box-shadow 160ms ease;
  will-change: transform;
}
.tsCard:hover {
  transform: translateY(-2px);
}
.tsMedia {
  border-radius: 1.5rem;
  overflow: hidden;
  background: var(--color-muted);
}
.tsImage {
  width: 100%;
  height: auto;
  aspect-ratio: 4 / 3;
  object-fit: cover;
  display: block;
}
/* Body */
.tsCardBody {
  padding-inline: 0.25rem;
}
.tsCardTitle {
  font-size: clamp(1.05rem, 0.5vw + 0.9rem, 1.25rem);
  margin: 0 0 0.25rem 0;
  font-weight: 600;
  color: var(--color-foreground);
}
.tsMetaRow {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  color: var(--color-muted-foreground);
}
.tsMetaText {
  font-size: clamp(0.85rem, 0.25vw + 0.75rem, 0.95rem);
}
/* Arrow */
.tsArrow {
  margin-left: auto;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  color: var(--color-foreground);
  opacity: 0.75;
  transition: transform 160ms ease, opacity 160ms ease;
}
.tsCard:hover .tsArrow {
  transform: translateX(4px);
  opacity: 1;
}
.tsArrowIcon {
  width: 22px;
  height: 22px;
}
.find {
  width: 100%;
  padding: 0 9.2rem;
}
.infofind {
    width: 100%;
}
/* Larger screens: give cards more breathing room */
@media (min-width: 1024px) {
  .tsSection {
    padding-block: 4.5rem;
  }
  .tsGrid {
    gap: 2rem;
  }
}

@media (max-width: 1000px) {
  .tsSection {
    padding: 0 6rem;
  }
  .find {
    padding: 0 6rem;
  }
}

@media (max-width: 800px) {
  .tsSection, .find {
    padding: 0 3rem;
  }
  .tsGrid {
    grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
  }
}

@media (max-width: 600px) {
  .tsSection, .find {
    padding: 0 2rem;
  }
  .tsGrid {
    grid-template-columns: 1fr;
  }
}

@media (max-width: 480px) {
  .tsSection, .find {
    padding: 0 1rem;
  }
}